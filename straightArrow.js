// Generated by CoffeeScript 1.7.1

/*!
Copyright (c) 2002-2015 "Neo Technology,"
Network Engine for Objects in Lund AB [http://neotechnology.com]

This file is part of Neo4j.

Neo4j is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

(function() {
  'use strict';
  neo.utils.straightArrow = (function() {
    function straightArrow(startRadius, endRadius, centreDistance, shaftWidth, headWidth, headHeight, captionLayout) {
      var endArrow, endShaft, headRadius, shaftRadius, startArrow;
      this.length = centreDistance - (startRadius + endRadius);
      this.shaftLength = this.length - headHeight;
      startArrow = startRadius;
      endShaft = startArrow + this.shaftLength;
      endArrow = startArrow + this.length;
      shaftRadius = shaftWidth / 2;
      headRadius = headWidth / 2;
      this.midShaftPoint = {
        x: startArrow + this.shaftLength / 2,
        y: 0
      };
      this.outline = function(shortCaptionLength) {
        var endBreak, startBreak;
        if (captionLayout === "external") {
          startBreak = startArrow + (this.shaftLength - shortCaptionLength) / 2;
          endBreak = endShaft - (this.shaftLength - shortCaptionLength) / 2;
          return ['M', startArrow, shaftRadius, 'L', startBreak, shaftRadius, 'L', startBreak, -shaftRadius, 'L', startArrow, -shaftRadius, 'Z', 'M', endBreak, shaftRadius, 'L', endShaft, shaftRadius, 'L', endShaft, headRadius, 'L', endArrow, 0, 'L', endShaft, -headRadius, 'L', endShaft, -shaftRadius, 'L', endBreak, -shaftRadius, 'Z'].join(' ');
        } else {
          return ['M', startArrow, shaftRadius, 'L', endShaft, shaftRadius, 'L', endShaft, headRadius, 'L', endArrow, 0, 'L', endShaft, -headRadius, 'L', endShaft, -shaftRadius, 'L', startArrow, -shaftRadius, 'Z'].join(' ');
        }
      };
      this.overlay = function(minWidth) {
        var radius;
        radius = Math.max(minWidth / 2, shaftRadius);
        return ['M', startArrow, radius, 'L', endArrow, radius, 'L', endArrow, -radius, 'L', startArrow, -radius, 'Z'].join(' ');
      };
    }

    straightArrow.prototype.deflection = 0;

    return straightArrow;

  })();

}).call(this);
